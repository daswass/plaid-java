/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.457.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.plaid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Insights into a user’s top merchants.
 */
@ApiModel(description = "Insights into a user’s top merchants.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-17T22:44:09.100608Z[Etc/UTC]")
public class MerchantInsights {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public static final String SERIALIZED_NAME_TRANSACTION_COUNT = "transaction_count";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_COUNT)
  private Integer transactionCount;

  public static final String SERIALIZED_NAME_PRIMARY_PERSONAL_FINANCE_CATEGORY = "primary_personal_finance_category";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PERSONAL_FINANCE_CATEGORY)
  private String primaryPersonalFinanceCategory;

  public static final String SERIALIZED_NAME_DETAILED_PERSONAL_FINANCE_CATEGORY = "detailed_personal_finance_category";
  @SerializedName(SERIALIZED_NAME_DETAILED_PERSONAL_FINANCE_CATEGORY)
  private String detailedPersonalFinanceCategory;

  public static final String SERIALIZED_NAME_TOTAL_OUTFLOWS = "total_outflows";
  @SerializedName(SERIALIZED_NAME_TOTAL_OUTFLOWS)
  private Double totalOutflows;

  public static final String SERIALIZED_NAME_TOTAL_INFLOWS = "total_inflows";
  @SerializedName(SERIALIZED_NAME_TOTAL_INFLOWS)
  private Double totalInflows;


  public MerchantInsights name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The counterparty name.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The counterparty name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MerchantInsights entityId(String entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * A unique, stable, Plaid-generated id that maps to the merchant.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique, stable, Plaid-generated id that maps to the merchant.")

  public String getEntityId() {
    return entityId;
  }


  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public MerchantInsights website(String website) {
    
    this.website = website;
    return this;
  }

   /**
   * The website associated with the merchant.
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The website associated with the merchant.")

  public String getWebsite() {
    return website;
  }


  public void setWebsite(String website) {
    this.website = website;
  }


  public MerchantInsights transactionCount(Integer transactionCount) {
    
    this.transactionCount = transactionCount;
    return this;
  }

   /**
   * The number of transactions associated with merchant of this type.
   * @return transactionCount
  **/
  @ApiModelProperty(required = true, value = "The number of transactions associated with merchant of this type.")

  public Integer getTransactionCount() {
    return transactionCount;
  }


  public void setTransactionCount(Integer transactionCount) {
    this.transactionCount = transactionCount;
  }


  public MerchantInsights primaryPersonalFinanceCategory(String primaryPersonalFinanceCategory) {
    
    this.primaryPersonalFinanceCategory = primaryPersonalFinanceCategory;
    return this;
  }

   /**
   * The primary personal finance category associated with this merchant.
   * @return primaryPersonalFinanceCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The primary personal finance category associated with this merchant.")

  public String getPrimaryPersonalFinanceCategory() {
    return primaryPersonalFinanceCategory;
  }


  public void setPrimaryPersonalFinanceCategory(String primaryPersonalFinanceCategory) {
    this.primaryPersonalFinanceCategory = primaryPersonalFinanceCategory;
  }


  public MerchantInsights detailedPersonalFinanceCategory(String detailedPersonalFinanceCategory) {
    
    this.detailedPersonalFinanceCategory = detailedPersonalFinanceCategory;
    return this;
  }

   /**
   * The detailed personal finance category associated with this merchant.
   * @return detailedPersonalFinanceCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The detailed personal finance category associated with this merchant.")

  public String getDetailedPersonalFinanceCategory() {
    return detailedPersonalFinanceCategory;
  }


  public void setDetailedPersonalFinanceCategory(String detailedPersonalFinanceCategory) {
    this.detailedPersonalFinanceCategory = detailedPersonalFinanceCategory;
  }


  public MerchantInsights totalOutflows(Double totalOutflows) {
    
    this.totalOutflows = totalOutflows;
    return this;
  }

   /**
   * Sum of outflow amounts.
   * @return totalOutflows
  **/
  @ApiModelProperty(required = true, value = "Sum of outflow amounts.")

  public Double getTotalOutflows() {
    return totalOutflows;
  }


  public void setTotalOutflows(Double totalOutflows) {
    this.totalOutflows = totalOutflows;
  }


  public MerchantInsights totalInflows(Double totalInflows) {
    
    this.totalInflows = totalInflows;
    return this;
  }

   /**
   * Sum of inflow amounts.
   * @return totalInflows
  **/
  @ApiModelProperty(required = true, value = "Sum of inflow amounts.")

  public Double getTotalInflows() {
    return totalInflows;
  }


  public void setTotalInflows(Double totalInflows) {
    this.totalInflows = totalInflows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantInsights merchantInsights = (MerchantInsights) o;
    return Objects.equals(this.name, merchantInsights.name) &&
        Objects.equals(this.entityId, merchantInsights.entityId) &&
        Objects.equals(this.website, merchantInsights.website) &&
        Objects.equals(this.transactionCount, merchantInsights.transactionCount) &&
        Objects.equals(this.primaryPersonalFinanceCategory, merchantInsights.primaryPersonalFinanceCategory) &&
        Objects.equals(this.detailedPersonalFinanceCategory, merchantInsights.detailedPersonalFinanceCategory) &&
        Objects.equals(this.totalOutflows, merchantInsights.totalOutflows) &&
        Objects.equals(this.totalInflows, merchantInsights.totalInflows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, entityId, website, transactionCount, primaryPersonalFinanceCategory, detailedPersonalFinanceCategory, totalOutflows, totalInflows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantInsights {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    transactionCount: ").append(toIndentedString(transactionCount)).append("\n");
    sb.append("    primaryPersonalFinanceCategory: ").append(toIndentedString(primaryPersonalFinanceCategory)).append("\n");
    sb.append("    detailedPersonalFinanceCategory: ").append(toIndentedString(detailedPersonalFinanceCategory)).append("\n");
    sb.append("    totalOutflows: ").append(toIndentedString(totalOutflows)).append("\n");
    sb.append("    totalInflows: ").append(toIndentedString(totalInflows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

